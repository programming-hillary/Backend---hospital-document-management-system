eureka:
    client:
        serviceUrl:
            defaultZone: http://eureka:password@localhost:8761/eureka
logging:
    pattern:
        level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
management:
    endpoint:
        health:
            show-details: always
    endpoints:
        web:
            exposure:
                include: '*'
    health:
        circuitbreakers:
            enabled: true
    tracing:
        sampling:
            probability: 1.0
    zipkin:
        tracing:
            endpoint: http://localhost:9411/api/v2/spans
resilience4j:
    circuitbreaker:
        instances:
            inventory:
                automaticTransitionFromOpenToHalfOpenEnabled: true
                event-consumer-buffer-size: 10
                failureRateThreshold: 50
                permittedNumberOfCallsInHalfOpenState: 3
                registerHealthIndicator: true
                slidingWindowSize: 5
                slidingWindowType: COUNT_BASED
                waitDurationInOpenState: 5s
    retry:
        instances:
            inventory:
                max-attempts: 3
                wait-duration: 5s
    timelimiter:
        instances:
            inventory:
                timeout-duration: 3s
server:
    port: 0
spring:
    application:
        name: searching_service
    data:
    mongodb:
        host: localhost
        port: 27017
        grid-fs-database: images
        database: searching-service
    kafka:
        bootstrap-servers: localhost:9092
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            properties:
                spring:
                    json:
                        type:
                            mapping: event:org.mwashi_mwale.searching_service.event.SearchEvent
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        template:
            default-topic: notificationTopic
